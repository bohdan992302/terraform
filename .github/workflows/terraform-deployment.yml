name: Terraform deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main



jobs:
  terraform:
    name: Terraform-jobs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    env:	
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Setup Terraform backend variables
        working-directory: ./terraform
        id: backend
        run: |-
          cat > backend.tfvars <<EOF
          access_key = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          secret_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          region     = "${{ secrets.AWS_REGION }}"
          EOF

      - name: Terraform Init
        id: init
        run: |
           terraform init -backend-config="backend.tfvars"

        
      - name: Setup Terraform backend variables
        working-directory: ./terraform
        id: terraform
        run: |-
          cat > terraform.tfvars <<EOF
          access_key = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          secret_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          region     = "${{ secrets.AWS_REGION }}"
          EOF

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -auto-approve -input=false -var-file=terraform.tfvars

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false -var-file=terraform.tfvars